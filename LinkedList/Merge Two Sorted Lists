You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

----------------------------------------------------------------------
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
       
    ListNode final_node = new ListNode(0);
        ListNode f_node= final_node;
        
        while(l1 !=null && l2 !=null)
        {
            if(l1.val < l2.val){
                f_node.next=l1;
                l1=l1.next;
            }
            else
            {
                f_node.next=l2;
                l2=l2.next;
            }
            
            f_node = f_node.next;
        }
        if(l1 != null){
            f_node.next= l1;
            l1= l1.next;
        }
        if(l2 != null){
            f_node.next= l2;
            l2=l2.next;
        }
        return final_node.next;
        
    }
}
